spring:
  profiles:
    active: test

mybatis:
  mapper-locations: classpath*:com/ljf/sidanfinance/dao/mapping/*Mapper.xml
  type-aliases-package: com.ljf.sidanfinance.dao.model
#  configuration:
#      map-underscore-to-camel-case: true

logging:
  path: ./logs/sidanfinance.log
  level:
    root: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger: %msg%n"
    file: "%d{yyyy-MM-dd HH:mm} [%thread] %-5level %logger: %msg%n"
#    %d{HH:mm:ss.SSS}——日志输出时间
#    %thread——输出日志的进程名字，这在Web应用以及异步任务处理中很有用
#    %-5level——日志级别，并且使用5个字符靠左对齐
#    %logger- ——日志输出者的名字
#    %msg——日志消息
#    %n——平台的换行符


mapper:
  mappers: com.ljf.sidanfinance.dao.base.BaseMapper
  not-empty: false
  identity: MYSQL

#分页配置
pagehelper:
  helperDialect: mysql # 指定数据库，不指定的话会默认自动检测数据库类型
  reasonable: true # 是否启用分页合理化。如果启用，当pagenum<1时，会自动查询第一页的数据，当pagenum>pages时，自动查询最后一页数据；不启用的，以上两种情况都会返回空数据
  supportMethodsArguments: true # 默认值false，分页插件会从查询方法的参数值中，自动根据上面 params 配置的字段中取值，查找到合适的值时就会自动分页。
  params: count=countSql # 用于从对象中根据属性名取值，可以配置 pageNum,pageSize,count,pageSizeZero,reasonable，不配置映射的用默认值，默认值为pageNum=pageNum;pageSize=pageSize;count=countSql;reasonable=reasonable;pageSizeZero=pageSizeZero

